En PHP, las "entradas" se refieren a los datos que son recibidos desde diferentes fuentes, como formularios web, parámetros de URL, datos de archivos, cookies, sesiones, bases de datos u otras fuentes externas. Estos datos son fundamentales para que un programa o script PHP pueda procesar información y llevar a cabo tareas específicas según la entrada proporcionada. Vamos a explorar las principales formas de manejar las entradas en PHP:

### 1. Formularios HTML:

Los formularios HTML son una de las formas más comunes de enviar datos a un script PHP. Los usuarios pueden ingresar información a través de campos de texto, selecciones, botones y otros elementos del formulario.

Ejemplo de un formulario HTML simple que envía datos mediante el método POST a un script PHP:

```html
<form method="post" action="procesar.php">
    <input type="text" name="nombre" placeholder="Nombre">
    <input type="email" name="email" placeholder="Correo electrónico">
    <input type="submit" value="Enviar">
</form>
```

### 2. Variables superglobales:

PHP utiliza variables superglobales para recoger y procesar datos provenientes de diferentes fuentes. Las más comunes son `$_GET`, `$_POST`, `$_REQUEST`, `$_FILES`, `$_COOKIE`, `$_SESSION`, `$_SERVER`, y `$_ENV`.

Ejemplo de recuperación de datos de un formulario enviado por método POST:

```php
$nombre = $_POST['nombre'];
$email = $_POST['email'];
```

### 3. Parámetros de URL:

Los parámetros de URL son valores que se pasan a través de la URL. Se pueden recuperar usando `$_GET`.

Ejemplo de URL con parámetros:

```
www.ejemplo.com/procesar.php?producto=zapatillas&precio=50
```

Recuperación de parámetros de URL en PHP:

```php
$producto = $_GET['producto'];
$precio = $_GET['precio'];
```

### 4. Lectura de datos de archivos:

PHP permite leer datos de archivos externos, como archivos de texto, CSV, XML, entre otros. Esto se puede hacer mediante funciones como `file_get_contents()` o manipulando archivos directamente con `fopen()`, `fread()`, entre otros.

### 5. Datos de bases de datos:

PHP se utiliza frecuentemente para interactuar con bases de datos. Se puede acceder a los datos utilizando extensiones como MySQLi o PDO, mediante consultas SQL para obtener, insertar, actualizar o eliminar información.

Ejemplo de consulta SQL básica con MySQLi:

```php
$conn = new mysqli($servername, $username, $password, $dbname);
$query = "SELECT * FROM usuarios";
$result = $conn->query($query);
```

Estos son solo algunos ejemplos de cómo se pueden recibir datos en PHP desde diferentes fuentes. Es importante validar y filtrar estos datos para evitar problemas de seguridad como inyección de código SQL o ataques de scripting entre otros.