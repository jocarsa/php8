La construcción `include` en PHP se utiliza para insertar y ejecutar el contenido de un archivo en otro archivo PHP en tiempo de ejecución. Esto permite dividir el código en diferentes archivos para facilitar la organización y reutilización del mismo.

### Sintaxis de `include`:

```php
include 'nombre_del_archivo.php';
```

- `'nombre_del_archivo.php'` es la ruta al archivo que se desea incluir.

### Ejemplo de uso de `include`:

Supongamos que tenemos dos archivos: `header.php` y `footer.php`, que contienen código HTML para encabezados y pies de página, respectivamente. Podemos incluir estos archivos en un archivo principal `index.php` usando `include` de la siguiente manera:

#### header.php
```php
<!DOCTYPE html>
<html>
<head>
    <title>Mi sitio web</title>
</head>
<body>
    <header>
        <h1>Encabezado</h1>
        <!-- Otras partes del encabezado -->
    </header>
```

#### footer.php
```php
    <footer>
        <!-- Otras partes del pie de página -->
        <p>Derechos de autor © 2023</p>
    </footer>
</body>
</html>
```

#### index.php
```php
<!DOCTYPE html>
<html>
<head>
    <title>Mi sitio web</title>
</head>
<body>
    <?php include 'header.php'; ?>

    <!-- Contenido de la página -->

    <?php include 'footer.php'; ?>
</body>
</html>
```

En este ejemplo, al utilizar `include`, el contenido de los archivos `header.php` y `footer.php` se insertará en el archivo `index.php` en los lugares donde se encuentran las respectivas llamadas a `include`. Esto permite que el contenido HTML de los archivos `header.php` y `footer.php` se reutilice en múltiples páginas sin tener que copiar y pegar el código repetidamente.

Es importante tener en cuenta que si el archivo especificado en `include` no se encuentra, PHP mostrará una advertencia (`Warning`) pero continuará ejecutando el script.